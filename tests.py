import unittest

from hundo import parse_from_json as parser

class TestParsingFromJson(unittest.TestCase):
    def test_smoke(self):
        strings = (
            'РЭУ, Факультет маркетинга, Менеджмент (38.03.02), ОП [Б], №: 3, №*: 1, №**: 2',
            'ВШЭ, ФСН, Политология (41.03.04), ОП [БК], №: 3, №*: 1, №**: 3',
            'МИЭТ, Прикладная математика (01.03.04), ОП [Б], №: 2, №*: 1, №**: 2',
            'ЛЭТИ, ФКТИ, Информационные системы и технологии (09.03.02), ОП [Б], №: 22, №*: 1, №**: 1359',
            'СПбГУАП, Информационная безопасность (10.03.01), Комплексная защита объектов информатизации, ОК [Б], №: 547, №*: 15, №**: 493'
        )
        answers = (
            ('РЭУ, Факультет маркетинга, Менеджмент (38.03.02)', 'ОП [Б]', False),
            ('ВШЭ, ФСН, Политология (41.03.04)', 'ОП [БК]', False),
            ('МИЭТ, Прикладная математика (01.03.04)', 'ОП [Б]', False),
            ('ЛЭТИ, ФКТИ, Информационные системы и технологии (09.03.02)', 'ОП [Б]', False),
            ('СПбГУАП, Информационная безопасность (10.03.01), Комплексная защита объектов информатизации', 'ОК [Б]', False)
        )
        for arg, expected in zip(strings, answers):
            self.assertTupleEqual(parser(arg), expected)


    def test_agreement(self):
        strings = (
            '<b>ВШЭ, ФМ, Математика (01.03.01), Совместный бакалавриат НИУ ВШЭ и ЦПМ, БВИ [Б], №: 15, №*: 14, №**: 15</b>',
            'ВШЭ, ФМ, Математика (01.03.01), Совместный бакалавриат НИУ ВШЭ и ЦПМ, БВИ [Б], №: 15, №*: 14, №**: 15'
        )
        answers = (
            True,
            False
        )
        for arg, expected in zip(strings, answers):
            self.assertEqual(parser(arg)[2], expected)
